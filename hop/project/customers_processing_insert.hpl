<?xml version="1.0" encoding="UTF-8"?>
<pipeline>
  <info>
    <name>customers_processing_insert</name>
    <name_sync_with_filename>Y</name_sync_with_filename>
    <description/>
    <extended_description/>
    <pipeline_version/>
    <pipeline_type>Normal</pipeline_type>
    <parameters>
    </parameters>
    <capture_transform_performance>N</capture_transform_performance>
    <transform_performance_capturing_delay>1000</transform_performance_capturing_delay>
    <transform_performance_capturing_size_limit>100</transform_performance_capturing_size_limit>
    <created_user>-</created_user>
    <created_date>2024/09/20 00:25:37.453</created_date>
    <modified_user>-</modified_user>
    <modified_date>2024/09/20 00:25:37.453</modified_date>
  </info>
  <notepads>
  </notepads>
  <order>
    <hop>
      <from>Generate rows</from>
      <to>Execute SQL script</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <transform>
    <name>Execute SQL script</name>
    <type>ExecSql</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <arguments>
</arguments>
    <connection>MotorIncDataLake</connection>
    <delete_field/>
    <execute_each_row>N</execute_each_row>
    <insert_field/>
    <quoteString>N</quoteString>
    <read_field/>
    <replace_variables>N</replace_variables>
    <set_params>N</set_params>
    <single_statement>N</single_statement>
    <sql>MERGE INTO ods.customers as t 
USING ods.tmp_customers as s
    ON t.customernumber = s.customernumber
    WHEN NOT MATCHED and s.op = 'I'
        THEN INSERT (customernumber, customername, contactlastname, contactfirstname, phone, addressline1, addressline2, city, state, postalcode, country, salesrepemployeenumber, creditlimit, zone_area, business_area, source_system, dataset, extract_at)
              VALUES (s.customernumber, s.customername, s.contactlastname, s.contactfirstname, s.phone, s.addressline1, s.addressline2, s.city, s.state, s.postalcode, s.country, s.salesrepemployeenumber, s.creditlimit, s.zone_area, s.business_area, s.source_system, s.dataset, s.extract_at);</sql>
    <update_field/>
    <attributes/>
    <GUI>
      <xloc>608</xloc>
      <yloc>240</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Generate rows</name>
    <type>RowGenerator</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
</fields>
    <interval_in_ms>5000</interval_in_ms>
    <last_time_field>FiveSecondsAgo</last_time_field>
    <limit>1</limit>
    <never_ending>N</never_ending>
    <row_time_field>now</row_time_field>
    <attributes/>
    <GUI>
      <xloc>608</xloc>
      <yloc>80</yloc>
    </GUI>
  </transform>
  <transform_error_handling>
  </transform_error_handling>
  <attributes/>
</pipeline>
